2025-08-30 02:33:38 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 25464 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 02:33:38 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 02:33:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 02:33:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 1 JPA repository interface.
2025-08-30 02:33:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 02:33:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 2 JPA repository interfaces.
2025-08-30 02:33:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 02:33:40 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 02:33:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 02:33:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 02:33:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 02:33:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1495 ms
2025-08-30 02:33:40 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 02:33:40 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 02:33:40 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 02:33:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 02:33:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 02:33:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@583030bd
2025-08-30 02:33:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 02:33:41 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 02:33:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 02:33:41 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 02:33:41 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 02:33:41 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 02:33:41 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 02:33:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 02:33:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@3054cdd3
2025-08-30 02:33:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 02:33:41 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 02:33:41 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 02:33:41 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 02:33:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 02:33:42 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 02:33:43 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 02:33:43 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 02:33:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 02:33:43 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 02:33:43 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 02:33:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 02:33:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 02:33:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756510423355
2025-08-30 02:33:43 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 02:33:43 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 5.323 seconds (process running for 6.161)
2025-08-30 02:33:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: 5o6NDfBgTQu3214k8Sfbkw
2025-08-30 02:33:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 02:33:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 02:33:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-ebd74ac9-f450-4511-aa31-e2dc881f1b87
2025-08-30 02:33:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 02:33:43 [RMI TCP Connection(2)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 02:33:43 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 02:33:43 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-30 02:33:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-ebd74ac9-f450-4511-aa31-e2dc881f1b87', protocol='range'}
2025-08-30 02:33:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 7: {consumer-sensor_data_interpreter_group-1-ebd74ac9-f450-4511-aa31-e2dc881f1b87=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 02:33:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-ebd74ac9-f450-4511-aa31-e2dc881f1b87', protocol='range'}
2025-08-30 02:33:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 02:33:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 02:33:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=100, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 02:33:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 02:34:54 [http-nio-8080-exec-74] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 02:34:54 [http-nio-8080-exec-74] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 02:34:54 [http-nio-8080-exec-74] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 02:34:54 [http-nio-8080-exec-74] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 02:34:54 [http-nio-8080-exec-74] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 02:34:54 [http-nio-8080-exec-74] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756510494317
2025-08-30 02:34:54 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: 5o6NDfBgTQu3214k8Sfbkw
2025-08-30 02:34:54 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
2025-08-30 02:34:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 29 messages from Kafka
2025-08-30 02:34:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 71 messages from Kafka
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:34:54 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-ebd74ac9-f450-4511-aa31-e2dc881f1b87 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 02:35:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 02:35:17 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 02:35:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 14:06:44 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 14992 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 14:06:44 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 14:06:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:06:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 1 JPA repository interface.
2025-08-30 14:06:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:06:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 2 JPA repository interfaces.
2025-08-30 14:06:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 14:06:46 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 14:06:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 14:06:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 14:06:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 14:06:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1615 ms
2025-08-30 14:06:46 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:06:46 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 14:06:46 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:06:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:06:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 14:06:47 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08001
2025-08-30 14:06:47 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Connection to localhost:5433 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
2025-08-30 14:06:47 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Connection to localhost:5433 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:334)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.turkishcargo.sensordatainterpreter.SensorDataInterpreterApplication.main(SensorDataInterpreterApplication.java:19)
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5433 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:373)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:57)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:277)
	at org.postgresql.Driver.makeConnection(Driver.java:448)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:144)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:370)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:207)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:488)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:576)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:97)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:485)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 35 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:261)
	at org.postgresql.core.PGStream.<init>(PGStream.java:122)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:146)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:289)
	... 49 common frames omitted
2025-08-30 14:06:47 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-08-30 14:06:47 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'calibrationEntityManagerFactory' defined in class path resource [com/turkishcargo/sensordatainterpreter/config/db/CalibrationDbConfig.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
2025-08-30 14:06:47 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-30 14:06:47 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-30 14:06:47 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'calibrationEntityManagerFactory' defined in class path resource [com/turkishcargo/sensordatainterpreter/config/db/CalibrationDbConfig.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.turkishcargo.sensordatainterpreter.SensorDataInterpreterApplication.main(SensorDataInterpreterApplication.java:19)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1442)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1513)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 15 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:186)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:410)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 30 common frames omitted
2025-08-30 14:17:39 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 17080 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 14:17:39 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 14:17:39 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:17:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 1 JPA repository interface.
2025-08-30 14:17:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:17:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
2025-08-30 14:17:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 14:17:40 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 14:17:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 14:17:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 14:17:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 14:17:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1382 ms
2025-08-30 14:17:41 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:17:41 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 14:17:41 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:17:41 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:17:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 14:17:41 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1acc768
2025-08-30 14:17:41 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 14:17:41 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:17:42 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:17:42 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-08-30 14:17:42 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "ukrcejww201uy112s2yvp57t7nr" of relation "aircraft_calibration" does not exist, skipping
2025-08-30 14:17:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:17:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:17:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:17:42 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:17:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 14:17:42 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@1a4c6e74
2025-08-30 14:17:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 14:17:42 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:17:42 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:17:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:17:43 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 14:17:43 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 14:17:43 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 14:17:43 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 14:17:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 14:17:43 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 14:17:43 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 14:17:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 14:17:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 14:17:43 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756552663907
2025-08-30 14:17:43 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 14:17:43 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 5.145 seconds (process running for 5.982)
2025-08-30 14:17:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] The metadata response from the cluster reported a recoverable issue with correlation id 3 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 14:17:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: 415Oj-s2RZmXTHq4wT3kRg
2025-08-30 14:17:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] The metadata response from the cluster reported a recoverable issue with correlation id 7 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 14:17:44 [RMI TCP Connection(3)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 14:17:44 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 14:17:44 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-08-30 14:17:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 14:17:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:17:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-b0eb6199-7102-4e37-8796-f50a27cd37ce
2025-08-30 14:17:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-sensor_data_interpreter_group-1-b0eb6199-7102-4e37-8796-f50a27cd37ce', protocol='range'}
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 1: {consumer-sensor_data_interpreter_group-1-b0eb6199-7102-4e37-8796-f50a27cd37ce=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-sensor_data_interpreter_group-1-b0eb6199-7102-4e37-8796-f50a27cd37ce', protocol='range'}
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Found no committed offset for partition turkish-cargo-sensors-0
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Found no committed offset for partition turkish-cargo-sensors-0
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting offset for partition turkish-cargo-sensors-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-08-30 14:17:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-b0eb6199-7102-4e37-8796-f50a27cd37ce sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 14:33:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 14:33:12 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 14:33:12 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 14:33:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:33:12 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:33:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 14:33:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 14:33:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 14:33:12 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 14:47:30 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 17340 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 14:47:30 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 14:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 1 JPA repository interface.
2025-08-30 14:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:47:30 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 2 JPA repository interfaces.
2025-08-30 14:47:31 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 14:47:31 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 14:47:31 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 14:47:31 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 14:47:31 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 14:47:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1551 ms
2025-08-30 14:47:32 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:47:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 14:47:32 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:47:32 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:47:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 14:47:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@180f33b2
2025-08-30 14:47:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 14:47:32 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:47:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:47:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:47:33 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:47:33 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:47:33 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:47:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 14:47:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@85fd4b
2025-08-30 14:47:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 14:47:33 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:47:33 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:47:33 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:47:34 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 14:47:34 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 14:47:34 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 14:47:34 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 14:47:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 14:47:34 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 14:47:34 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 14:47:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 14:47:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 14:47:34 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756554454908
2025-08-30 14:47:34 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 14:47:34 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 5.497 seconds (process running for 6.399)
2025-08-30 14:47:35 [RMI TCP Connection(1)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 14:47:35 [RMI TCP Connection(1)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 14:47:35 [RMI TCP Connection(1)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-30 14:47:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: 415Oj-s2RZmXTHq4wT3kRg
2025-08-30 14:47:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 14:47:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:47:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-a9183ed5-c12d-4a70-81ea-24230ddac05d
2025-08-30 14:47:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:47:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-sensor_data_interpreter_group-1-a9183ed5-c12d-4a70-81ea-24230ddac05d', protocol='range'}
2025-08-30 14:47:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 3: {consumer-sensor_data_interpreter_group-1-a9183ed5-c12d-4a70-81ea-24230ddac05d=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 14:47:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-sensor_data_interpreter_group-1-a9183ed5-c12d-4a70-81ea-24230ddac05d', protocol='range'}
2025-08-30 14:47:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 14:47:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 14:47:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 14:47:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-a9183ed5-c12d-4a70-81ea-24230ddac05d sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 14:48:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 14:48:45 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 14:48:45 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 14:48:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:48:45 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:48:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 14:48:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 14:48:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 14:48:45 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 14:49:31 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 17356 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 14:49:31 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 14:49:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:49:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 1 JPA repository interface.
2025-08-30 14:49:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:49:31 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 2 JPA repository interfaces.
2025-08-30 14:49:32 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 14:49:32 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 14:49:32 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 14:49:32 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 14:49:32 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 14:49:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1451 ms
2025-08-30 14:49:32 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:49:33 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 14:49:33 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:49:33 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:49:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 14:49:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@361fa478
2025-08-30 14:49:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 14:49:33 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:49:34 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:49:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:49:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:49:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:49:34 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:49:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 14:49:34 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@1104cf3a
2025-08-30 14:49:34 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 14:49:34 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:49:34 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:49:34 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:49:34 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 14:49:35 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 14:49:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 14:49:35 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 14:49:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 14:49:35 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 14:49:35 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 14:49:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 14:49:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 14:49:35 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756554575802
2025-08-30 14:49:35 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 14:49:35 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 5.3 seconds (process running for 6.182)
2025-08-30 14:49:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: 415Oj-s2RZmXTHq4wT3kRg
2025-08-30 14:49:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 14:49:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:49:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-f7eb8ce4-081a-466a-80d5-d4c23ca8243d
2025-08-30 14:49:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:49:36 [RMI TCP Connection(3)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 14:49:36 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 14:49:36 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-30 14:49:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-sensor_data_interpreter_group-1-f7eb8ce4-081a-466a-80d5-d4c23ca8243d', protocol='range'}
2025-08-30 14:49:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 5: {consumer-sensor_data_interpreter_group-1-f7eb8ce4-081a-466a-80d5-d4c23ca8243d=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 14:49:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-sensor_data_interpreter_group-1-f7eb8ce4-081a-466a-80d5-d4c23ca8243d', protocol='range'}
2025-08-30 14:49:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 14:49:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 14:49:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 14:49:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-f7eb8ce4-081a-466a-80d5-d4c23ca8243d sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 14:50:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 14:50:18 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 14:50:18 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 14:50:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:50:18 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:50:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 14:50:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 14:50:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 14:50:18 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 14:50:26 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 13988 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 14:50:26 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 14:50:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:50:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 31 ms. Found 1 JPA repository interface.
2025-08-30 14:50:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:50:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 2 JPA repository interfaces.
2025-08-30 14:50:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 14:50:27 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 14:50:27 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 14:50:27 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 14:50:27 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 14:50:27 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1457 ms
2025-08-30 14:50:27 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:50:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 14:50:28 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:50:28 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:50:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 14:50:28 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1acc768
2025-08-30 14:50:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 14:50:28 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:50:29 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:50:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:50:29 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:50:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:50:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:50:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 14:50:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@5e0602ff
2025-08-30 14:50:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 14:50:29 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:50:29 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:50:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:50:29 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 14:50:29 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 14:50:30 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 14:50:30 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 14:50:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 14:50:30 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 14:50:30 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 14:50:30 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 14:50:30 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 14:50:30 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756554630681
2025-08-30 14:50:30 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 14:50:30 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 5.111 seconds (process running for 6.087)
2025-08-30 14:50:30 [RMI TCP Connection(3)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 14:50:30 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 14:50:30 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-30 14:50:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: 415Oj-s2RZmXTHq4wT3kRg
2025-08-30 14:50:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 14:50:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:50:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-59730d0e-6db6-4def-b649-0ff6ddb03cbf
2025-08-30 14:50:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:50:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-59730d0e-6db6-4def-b649-0ff6ddb03cbf', protocol='range'}
2025-08-30 14:50:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 7: {consumer-sensor_data_interpreter_group-1-59730d0e-6db6-4def-b649-0ff6ddb03cbf=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 14:50:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-59730d0e-6db6-4def-b649-0ff6ddb03cbf', protocol='range'}
2025-08-30 14:50:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 14:50:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 14:50:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 14:50:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 14:51:16 [http-nio-8080-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 14:51:16 [http-nio-8080-exec-2] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 14:51:16 [http-nio-8080-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 14:51:16 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 14:51:16 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 14:51:16 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756554676673
2025-08-30 14:51:16 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: 415Oj-s2RZmXTHq4wT3kRg
2025-08-30 14:51:16 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2025-08-30 14:51:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 14:51:16 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:51:16 [pool-2-thread-5] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-6] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-3] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-1] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-4] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-7] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-10] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-2] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-8] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-9] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-8] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-10] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-1] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-6] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-7] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-9] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-4] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-5] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-2] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:51:16 [pool-2-thread-3] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:55:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight FETCH request with correlation id 764 due to node 1 being disconnected (elapsed time since creation: 249ms, elapsed time since send: 249ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Error sending fetch request (sessionId=1308927943, epoch=640) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-08-30 14:55:56 [kafka-coordinator-heartbeat-thread | sensor_data_interpreter_group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 2147483646 disconnected.
2025-08-30 14:55:56 [kafka-coordinator-heartbeat-thread | sensor_data_interpreter_group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2025-08-30 14:55:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-30 14:55:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:55:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 8 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node -1 disconnected.
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 765 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:55:56 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 9 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:55:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 766 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:55:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 768 due to node 1 being disconnected (elapsed time since creation: 4ms, elapsed time since send: 4ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Error sending fetch request (sessionId=1308927943, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-08-30 14:55:57 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:55:57 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 10 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:55:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 770 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:58 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:55:58 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:55:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:55:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:55:59 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:55:59 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 11 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:55:59 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 771 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:00 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:56:00 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 12 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:56:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 772 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:01 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:56:01 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 13 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:56:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 773 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:02 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:56:02 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 14 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:56:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 774 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:03 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:56:03 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 15 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 775 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:04 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:56:04 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 16 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:56:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 776 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:56:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] The metadata response from the cluster reported a recoverable issue with correlation id 19 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 14:56:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] The metadata response from the cluster reported a recoverable issue with correlation id 779 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 14:56:05 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] The metadata response from the cluster reported a recoverable issue with correlation id 20 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 14:56:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting the last seen epoch of partition turkish-cargo-sensors-0 to 0 since the associated topicId changed from null to uze2vaNGQfq80U4heacbQA
2025-08-30 14:56:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 14:56:05 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition turkish-cargo-sensors-0 to 0 since the associated topicId changed from null to uze2vaNGQfq80U4heacbQA
2025-08-30 14:56:22 [http-nio-8080-exec-9] INFO  c.t.s.service.LocationServiceImpl - Fetching location history for device: tk-12345-67890 from 2023-03-15T17:00:00Z to 2023-03-15T18:00:00Z
2025-08-30 14:56:22 [http-nio-8080-exec-9] INFO  c.t.s.service.LocationServiceImpl - Found 0 location events for device: tk-12345-67890
2025-08-30 14:56:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 3 messages from Kafka
2025-08-30 14:56:33 [pool-2-thread-12] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-11] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-13] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-12] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-11] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-13] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-12] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-13] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-11] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 4 messages from Kafka
2025-08-30 14:56:33 [pool-2-thread-14] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-14] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-14] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 3 messages from Kafka
2025-08-30 14:56:33 [pool-2-thread-17] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-16] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-17] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-16] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-17] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-16] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-15] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-15] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-15] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-19] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-19] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-19] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-18] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-18] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-20] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 14:56:33 [pool-2-thread-18] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-20] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:56:33 [pool-2-thread-20] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 14:58:25 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight FETCH request with correlation id 1115 due to node 1 being disconnected (elapsed time since creation: 455ms, elapsed time since send: 455ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 2147483646 disconnected.
2025-08-30 14:58:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Error sending fetch request (sessionId=1081738700, epoch=280) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-08-30 14:58:25 [kafka-coordinator-heartbeat-thread | sensor_data_interpreter_group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2025-08-30 14:58:25 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node -1 disconnected.
2025-08-30 14:58:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 31 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1116 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1117 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 32 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1118 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:26 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 33 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1119 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:27 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:27 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 34 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:28 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:28 [kafka-coordinator-heartbeat-thread | sensor_data_interpreter_group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Error sending fetch request (sessionId=1081738700, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-08-30 14:58:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:28 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:28 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:30 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:30 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:31 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:31 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:32 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:32 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:33 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:33 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:33 [kafka-coordinator-heartbeat-thread | sensor_data_interpreter_group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:33 [kafka-coordinator-heartbeat-thread | sensor_data_interpreter_group] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:33 [kafka-coordinator-heartbeat-thread | sensor_data_interpreter_group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Error sending fetch request (sessionId=1081738700, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-08-30 14:58:34 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:34 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:35 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:35 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:36 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:36 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2025-08-30 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1122 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:37 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:37 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 35 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1123 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:38 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:38 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 36 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1124 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Error sending fetch request (sessionId=1081738700, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-08-30 14:58:38 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:38 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 37 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1127 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:39 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:39 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 38 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1128 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:41 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:41 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 39 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1129 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:42 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:42 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 40 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1130 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:43 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Node 1 disconnected.
2025-08-30 14:58:43 [kafka-producer-network-thread | producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] Cancelled in-flight API_VERSIONS request with correlation id 41 due to node 1 being disconnected (elapsed time since creation: 2ms, elapsed time since send: 2ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Node 1 disconnected.
2025-08-30 14:58:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cancelled in-flight API_VERSIONS request with correlation id 1132 due to node 1 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, throttle time: 0ms, request timeout: 30000ms)
2025-08-30 14:58:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Error sending fetch request (sessionId=1081738700, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2025-08-30 14:58:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] The metadata response from the cluster reported a recoverable issue with correlation id 44 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 14:58:44 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 14:58:44 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] The metadata response from the cluster reported a recoverable issue with correlation id 45 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 14:58:44 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Resetting the last seen epoch of partition turkish-cargo-sensors-0 to 0 since the associated topicId changed from null to mFve8NaMS9CIdQJDMPF_OQ
2025-08-30 14:58:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting the last seen epoch of partition turkish-cargo-sensors-0 to 0 since the associated topicId changed from uze2vaNGQfq80U4heacbQA to mFve8NaMS9CIdQJDMPF_OQ
2025-08-30 14:58:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Attempt to heartbeat with Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-59730d0e-6db6-4def-b649-0ff6ddb03cbf', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: encountered UNKNOWN_MEMBER_ID from HEARTBEAT response
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Giving away all assigned partitions as lost since generation/memberID has been reset,indicating that consumer is in old state or no longer part of the group
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Lost previously assigned partitions turkish-cargo-sensors-0
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions lost: [turkish-cargo-sensors-0]
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-d0ec780c-94aa-4ccb-acd9-708e526c21d7
2025-08-30 14:58:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-sensor_data_interpreter_group-1-d0ec780c-94aa-4ccb-acd9-708e526c21d7', protocol='range'}
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 1: {consumer-sensor_data_interpreter_group-1-d0ec780c-94aa-4ccb-acd9-708e526c21d7=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-sensor_data_interpreter_group-1-d0ec780c-94aa-4ccb-acd9-708e526c21d7', protocol='range'}
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Found no committed offset for partition turkish-cargo-sensors-0
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Found no committed offset for partition turkish-cargo-sensors-0
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting offset for partition turkish-cargo-sensors-0 to position FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-08-30 14:58:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 14:58:56 [HikariPool-2:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Failed to validate connection org.postgresql.jdbc.PgConnection@532c42a3 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-08-30 14:59:00 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@3a4de21e (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-08-30 14:59:00 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@63ad634d (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-08-30 14:59:01 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection org.postgresql.jdbc.PgConnection@4e7a3411 (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-08-30 14:59:02 [HikariPool-2:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Failed to validate connection org.postgresql.jdbc.PgConnection@787a06ae (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-08-30 14:59:03 [HikariPool-2:housekeeper] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Failed to validate connection org.postgresql.jdbc.PgConnection@537ed63a (This connection has been closed.). Possibly consider using a shorter maxLifetime value.
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-d0ec780c-94aa-4ccb-acd9-708e526c21d7 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 14:59:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 14:59:10 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 14:59:11 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 14:59:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 14:59:15 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 15304 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 14:59:15 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 14:59:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:59:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 1 JPA repository interface.
2025-08-30 14:59:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 14:59:15 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 2 JPA repository interfaces.
2025-08-30 14:59:16 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 14:59:16 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 14:59:16 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 14:59:16 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 14:59:16 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 14:59:16 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1535 ms
2025-08-30 14:59:16 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:59:16 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 14:59:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:59:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:59:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 14:59:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@48c3a0ef
2025-08-30 14:59:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 14:59:17 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:59:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:59:18 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-08-30 14:59:18 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "ukrcejww201uy112s2yvp57t7nr" of relation "aircraft_calibration" does not exist, skipping
2025-08-30 14:59:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:59:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 14:59:18 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 14:59:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 14:59:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 14:59:18 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@5b5e45bc
2025-08-30 14:59:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 14:59:18 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 14:59:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 14:59:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 14:59:18 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 14:59:18 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 14:59:19 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 14:59:19 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 14:59:19 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 14:59:19 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 14:59:19 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 14:59:19 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 14:59:19 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 14:59:19 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756555159618
2025-08-30 14:59:19 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 14:59:19 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 5.22 seconds (process running for 6.231)
2025-08-30 14:59:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 14:59:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 14:59:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:59:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-3e5de480-0c83-492a-9e77-7f9aa9418931
2025-08-30 14:59:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 14:59:20 [RMI TCP Connection(3)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 14:59:20 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 14:59:20 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-30 14:59:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-sensor_data_interpreter_group-1-3e5de480-0c83-492a-9e77-7f9aa9418931', protocol='range'}
2025-08-30 14:59:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 3: {consumer-sensor_data_interpreter_group-1-3e5de480-0c83-492a-9e77-7f9aa9418931=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 14:59:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-sensor_data_interpreter_group-1-3e5de480-0c83-492a-9e77-7f9aa9418931', protocol='range'}
2025-08-30 14:59:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 14:59:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 14:59:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=10, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 14:59:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 15:00:03 [http-nio-8080-exec-8] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 15:00:03 [http-nio-8080-exec-8] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:00:03 [http-nio-8080-exec-8] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 15:00:03 [http-nio-8080-exec-8] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:00:03 [http-nio-8080-exec-8] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:00:03 [http-nio-8080-exec-8] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756555203928
2025-08-30 15:00:03 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 15:00:03 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2025-08-30 15:00:03 [kafka-producer-network-thread | producer-1] WARN  o.a.k.c.producer.internals.Sender - [Producer clientId=producer-1] Got error produce response with correlation id 7 on topic-partition turkish-cargo-sensors-0, retrying (2147483646 attempts left). Error: OUT_OF_ORDER_SEQUENCE_NUMBER
2025-08-30 15:00:03 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 1
2025-08-30 15:00:03 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.internals.ProducerBatch - Resetting sequence number of batch with current sequence 0 for partition turkish-cargo-sensors-0 to 0
2025-08-30 15:00:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 15:00:04 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:00:04 [pool-2-thread-4] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-6] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-3] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-1] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-10] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-5] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-8] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-7] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-9] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-2] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-9] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-3] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-1] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-10] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-5] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-4] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-6] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-8] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-2] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:00:04 [pool-2-thread-7] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-3e5de480-0c83-492a-9e77-7f9aa9418931 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 15:08:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 15:08:27 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 15:08:27 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 15:08:27 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 15:08:27 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:08:27 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:08:27 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:08:27 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:08:27 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 15:08:28 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:08:28 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:08:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 15:08:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 15:08:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 15:08:28 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 15:08:35 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 17064 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 15:08:35 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 15:08:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:08:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 1 JPA repository interface.
2025-08-30 15:08:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:08:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
2025-08-30 15:08:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 15:08:37 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 15:08:37 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 15:08:37 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 15:08:37 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 15:08:37 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1950 ms
2025-08-30 15:08:37 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:08:37 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 15:08:37 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:08:37 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:08:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 15:08:37 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@391e85df
2025-08-30 15:08:37 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 15:08:37 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:08:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:08:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:08:38 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:08:38 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:08:38 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:08:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 15:08:38 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@6715a6da
2025-08-30 15:08:38 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 15:08:38 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:08:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:08:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:08:39 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 15:08:39 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 15:08:40 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 15:08:40 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 15:08:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 15:08:40 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 15:08:40 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:08:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:08:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:08:40 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756555720869
2025-08-30 15:08:40 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 15:08:40 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 6.65 seconds (process running for 7.669)
2025-08-30 15:08:41 [RMI TCP Connection(3)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 15:08:41 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 15:08:41 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-30 15:08:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 15:08:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 15:08:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:08:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-2d806f56-58fe-4ef3-a995-3ee5d3ef5b00
2025-08-30 15:08:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:08:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-sensor_data_interpreter_group-1-2d806f56-58fe-4ef3-a995-3ee5d3ef5b00', protocol='range'}
2025-08-30 15:08:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 5: {consumer-sensor_data_interpreter_group-1-2d806f56-58fe-4ef3-a995-3ee5d3ef5b00=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 15:08:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-sensor_data_interpreter_group-1-2d806f56-58fe-4ef3-a995-3ee5d3ef5b00', protocol='range'}
2025-08-30 15:08:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 15:08:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 15:08:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=20, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 15:08:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 15:08:49 [http-nio-8080-exec-8] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 15:08:49 [http-nio-8080-exec-8] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:08:49 [http-nio-8080-exec-8] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 15:08:49 [http-nio-8080-exec-8] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:08:49 [http-nio-8080-exec-8] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:08:49 [http-nio-8080-exec-8] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756555729571
2025-08-30 15:08:49 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 15:08:49 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
2025-08-30 15:08:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 15:08:49 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:08:49 [pool-2-thread-1] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-10] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-6] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-7] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-9] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-8] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-5] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-4] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-2] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-3] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-8] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-4] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-2] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-7] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-1] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-6] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-3] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-5] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-10] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:08:49 [pool-2-thread-9] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:46)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:35)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-2d806f56-58fe-4ef3-a995-3ee5d3ef5b00 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 15:13:21 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 15:13:21 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 15:13:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 15:14:05 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 5356 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 15:14:05 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 15:14:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:14:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 1 JPA repository interface.
2025-08-30 15:14:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:14:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
2025-08-30 15:14:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 15:14:07 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 15:14:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 15:14:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 15:14:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 15:14:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1810 ms
2025-08-30 15:14:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:14:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 15:14:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:14:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:14:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 15:14:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22f046b
2025-08-30 15:14:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 15:14:08 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:14:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:14:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:14:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:14:09 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:14:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:14:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 15:14:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@12d28106
2025-08-30 15:14:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 15:14:09 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:14:09 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:14:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:14:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 15:14:10 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 15:14:10 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 15:14:10 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 15:14:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 15:14:10 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 15:14:10 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:14:10 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:14:10 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:14:10 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756556050800
2025-08-30 15:14:10 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 15:14:10 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 6.044 seconds (process running for 7.285)
2025-08-30 15:14:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 15:14:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 15:14:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:14:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-75f0ba1c-6ceb-4b3c-baf0-8d5e315f9083
2025-08-30 15:14:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:14:11 [RMI TCP Connection(4)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 15:14:11 [RMI TCP Connection(4)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 15:14:11 [RMI TCP Connection(4)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-30 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-75f0ba1c-6ceb-4b3c-baf0-8d5e315f9083', protocol='range'}
2025-08-30 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 7: {consumer-sensor_data_interpreter_group-1-75f0ba1c-6ceb-4b3c-baf0-8d5e315f9083=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-75f0ba1c-6ceb-4b3c-baf0-8d5e315f9083', protocol='range'}
2025-08-30 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=30, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 15:14:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 15:14:22 [http-nio-8080-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 15:14:22 [http-nio-8080-exec-3] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:14:22 [http-nio-8080-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 15:14:22 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:14:22 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:14:22 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756556062764
2025-08-30 15:14:22 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: f0OlI0hFRmqQZA1Vx6tiFA
2025-08-30 15:14:22 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 2 with epoch 0
2025-08-30 15:14:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 15:14:23 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-5] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-6] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-4] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-10] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:14:23 [pool-2-thread-7] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-1] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-2] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-3] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-8] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-9] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-1] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-7] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-3] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-9] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-5] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-6] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-10] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-8] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-4] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [pool-2-thread-2] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:14:23 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] The metadata response from the cluster reported a recoverable issue with correlation id 8 : {turkish-cargo-sensors.DLQ=LEADER_NOT_AVAILABLE}
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-75f0ba1c-6ceb-4b3c-baf0-8d5e315f9083 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 15:16:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 15:16:11 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 15:16:11 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 15:16:16 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 8176 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 15:16:16 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 15:16:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:16:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 1 JPA repository interface.
2025-08-30 15:16:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:16:17 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
2025-08-30 15:16:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 15:16:18 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 15:16:18 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 15:16:18 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 15:16:18 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 15:16:18 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1699 ms
2025-08-30 15:16:18 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:16:18 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 15:16:18 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:16:19 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:16:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 15:16:19 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@30ed4034
2025-08-30 15:16:19 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 15:16:19 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:16:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:16:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:20 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:16:20 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:16:20 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:16:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 15:16:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@46e38c28
2025-08-30 15:16:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 15:16:20 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:16:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:16:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:21 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 15:16:21 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 15:16:21 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 15:16:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 15:16:22 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 15:16:22 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:16:22 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:16:22 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:16:22 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756556182206
2025-08-30 15:16:22 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 15:16:22 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 6.019 seconds (process running for 6.851)
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 15:16:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 15:16:22 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 15:16:22 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 15:16:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:22 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 15:16:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 15:16:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 15:16:22 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 15:16:39 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 6292 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 15:16:39 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 15:16:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:16:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
2025-08-30 15:16:40 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:16:41 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 2 JPA repository interfaces.
2025-08-30 15:16:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 15:16:42 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 15:16:42 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 15:16:42 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 15:16:42 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 15:16:42 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2655 ms
2025-08-30 15:16:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:16:43 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 15:16:43 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:16:43 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:16:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 15:16:43 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1acc768
2025-08-30 15:16:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 15:16:43 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:16:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:16:45 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Warning Code: 0, SQLState: 00000
2025-08-30 15:16:45 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - constraint "ukrcejww201uy112s2yvp57t7nr" of relation "aircraft_calibration" does not exist, skipping
2025-08-30 15:16:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:16:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:16:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:16:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 15:16:45 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@1a4c6e74
2025-08-30 15:16:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 15:16:45 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:16:45 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:16:45 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:16:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 15:16:47 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 15:16:47 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 15:16:48 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 15:16:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 15:16:48 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 15:16:48 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:16:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:16:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:16:48 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756556208408
2025-08-30 15:16:48 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 15:16:48 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 9.98 seconds (process running for 11.662)
2025-08-30 15:16:49 [RMI TCP Connection(2)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 15:16:49 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 15:16:49 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-30 15:16:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] The metadata response from the cluster reported a recoverable issue with correlation id 3 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 15:16:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:16:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] The metadata response from the cluster reported a recoverable issue with correlation id 7 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 15:16:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] The metadata response from the cluster reported a recoverable issue with correlation id 9 : {turkish-cargo-sensors=LEADER_NOT_AVAILABLE}
2025-08-30 15:16:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 15:16:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:16:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-70b91ea9-e061-4288-8b4b-c0c439cd6338
2025-08-30 15:16:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-sensor_data_interpreter_group-1-70b91ea9-e061-4288-8b4b-c0c439cd6338', protocol='range'}
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 1: {consumer-sensor_data_interpreter_group-1-70b91ea9-e061-4288-8b4b-c0c439cd6338=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-sensor_data_interpreter_group-1-70b91ea9-e061-4288-8b4b-c0c439cd6338', protocol='range'}
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Found no committed offset for partition turkish-cargo-sensors-0
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Found no committed offset for partition turkish-cargo-sensors-0
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting offset for partition turkish-cargo-sensors-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2025-08-30 15:16:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 15:17:22 [http-nio-8080-exec-6] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 15:17:22 [http-nio-8080-exec-6] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:17:22 [http-nio-8080-exec-6] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 15:17:22 [http-nio-8080-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:17:22 [http-nio-8080-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:17:22 [http-nio-8080-exec-6] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756556242411
2025-08-30 15:17:22 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:17:22 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 0 with epoch 0
2025-08-30 15:17:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 15:17:22 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:17:22 [pool-2-thread-5] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-1] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-7] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-10] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-9] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-2] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-6] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-4] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-3] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-8] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-7] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-3] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-5] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-4] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-9] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-2] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-6] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-10] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-1] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [pool-2-thread-8] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:17:22 [kafka-producer-network-thread | producer-1] WARN  o.apache.kafka.clients.NetworkClient - [Producer clientId=producer-1] The metadata response from the cluster reported a recoverable issue with correlation id 8 : {turkish-cargo-sensors.dlq=LEADER_NOT_AVAILABLE}
2025-08-30 15:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 2 messages from Kafka
2025-08-30 15:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 8 messages from Kafka
2025-08-30 15:20:45 [pool-2-thread-11] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-12] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-12] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-11] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-12] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-11] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-14] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-15] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-14] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-15] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-14] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-15] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-16] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-13] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-16] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-13] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-13] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-16] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-20] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-20] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-20] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-17] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-17] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-18] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-19] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:20:45 [pool-2-thread-18] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-19] ERROR c.t.s.s.SensorDataProcessingService - Error while processing single message id TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-18] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-19] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:20:45 [pool-2-thread-17] ERROR c.t.s.consumer.SensorDataConsumer - Failed message id=TK02: Event can not be empty
java.lang.RuntimeException: Event can not be empty
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService.processSensorData(SensorDataProcessingService.java:35)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:728)
	at com.turkishcargo.sensordatainterpreter.service.SensorDataProcessingService$$SpringCGLIB$$0.processSensorData(<generated>)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.processMessage(SensorDataConsumer.java:48)
	at com.turkishcargo.sensordatainterpreter.consumer.SensorDataConsumer.lambda$consume$0(SensorDataConsumer.java:37)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-70b91ea9-e061-4288-8b4b-c0c439cd6338 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 15:21:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 15:21:53 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 15:21:53 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 15:29:08 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 16692 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 15:29:08 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 15:29:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:29:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 1 JPA repository interface.
2025-08-30 15:29:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:29:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 2 JPA repository interfaces.
2025-08-30 15:29:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 15:29:10 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 15:29:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 15:29:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 15:29:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 15:29:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2183 ms
2025-08-30 15:29:11 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:29:11 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 15:29:11 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:29:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:29:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 15:29:11 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@77e6053
2025-08-30 15:29:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 15:29:11 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:29:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:29:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:29:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:29:13 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:29:13 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:29:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 15:29:13 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@4110ffe5
2025-08-30 15:29:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 15:29:13 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:29:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:29:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:29:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 15:29:14 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 15:29:14 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 15:29:14 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 15:29:14 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 15:29:14 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 15:29:15 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:29:15 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:29:15 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:29:15 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756556955163
2025-08-30 15:29:15 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 15:29:15 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 7.647 seconds (process running for 8.85)
2025-08-30 15:29:15 [RMI TCP Connection(3)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 15:29:15 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 15:29:15 [RMI TCP Connection(3)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-30 15:29:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:29:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 15:29:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:29:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-4114ae19-b252-41b7-bd66-63768e12474c
2025-08-30 15:29:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:29:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-sensor_data_interpreter_group-1-4114ae19-b252-41b7-bd66-63768e12474c', protocol='range'}
2025-08-30 15:29:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 3: {consumer-sensor_data_interpreter_group-1-4114ae19-b252-41b7-bd66-63768e12474c=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 15:29:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-sensor_data_interpreter_group-1-4114ae19-b252-41b7-bd66-63768e12474c', protocol='range'}
2025-08-30 15:29:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 15:29:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 15:29:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=20, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 15:29:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 15:29:46 [http-nio-8080-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 15:29:46 [http-nio-8080-exec-3] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:29:46 [http-nio-8080-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 15:29:46 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:29:46 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:29:46 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756556986737
2025-08-30 15:29:46 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:29:46 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 1 with epoch 0
2025-08-30 15:29:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 15:29:47 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:47 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:47 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 3 messages from Kafka
2025-08-30 15:29:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 1 messages from Kafka
2025-08-30 15:29:53 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 5 messages from Kafka
2025-08-30 15:29:53 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 1 messages from Kafka
2025-08-30 15:29:53 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:29:53 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:29:53 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-4114ae19-b252-41b7-bd66-63768e12474c sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 15:38:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 15:38:49 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 15:38:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 15:38:57 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 5152 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 15:38:57 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 15:38:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:38:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 1 JPA repository interface.
2025-08-30 15:38:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:38:58 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 2 JPA repository interfaces.
2025-08-30 15:38:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 15:38:59 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 15:38:59 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 15:38:59 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 15:38:59 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 15:38:59 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1905 ms
2025-08-30 15:38:59 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:38:59 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 15:38:59 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:38:59 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:38:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 15:39:00 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18be3205
2025-08-30 15:39:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 15:39:00 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:39:00 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:39:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:39:01 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:39:01 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:39:01 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:39:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 15:39:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@514c6ca0
2025-08-30 15:39:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 15:39:01 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:39:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:39:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:39:01 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 15:39:01 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 15:39:02 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 15:39:02 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 15:39:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 15:39:02 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 15:39:02 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:39:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:39:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:39:02 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756557542858
2025-08-30 15:39:02 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 15:39:02 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 6.617 seconds (process running for 7.91)
2025-08-30 15:39:03 [RMI TCP Connection(2)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 15:39:03 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 15:39:03 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-30 15:39:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:39:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 15:39:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:39:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-04ce53de-e2f6-4617-b49f-1d56b678a87e
2025-08-30 15:39:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:39:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-sensor_data_interpreter_group-1-04ce53de-e2f6-4617-b49f-1d56b678a87e', protocol='range'}
2025-08-30 15:39:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 5: {consumer-sensor_data_interpreter_group-1-04ce53de-e2f6-4617-b49f-1d56b678a87e=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 15:39:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-sensor_data_interpreter_group-1-04ce53de-e2f6-4617-b49f-1d56b678a87e', protocol='range'}
2025-08-30 15:39:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 15:39:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 15:39:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=40, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 15:39:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 15:39:39 [http-nio-8080-exec-3] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 15:39:39 [http-nio-8080-exec-3] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:39:39 [http-nio-8080-exec-3] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 15:39:39 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:39:39 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:39:39 [http-nio-8080-exec-3] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756557579947
2025-08-30 15:39:39 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:39:39 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 2 with epoch 0
2025-08-30 15:39:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 15:39:40 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:39:40 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:39:40 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-04ce53de-e2f6-4617-b49f-1d56b678a87e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 15:40:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 15:40:47 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 15:40:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 15:40:55 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 12252 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 15:40:55 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 15:40:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:40:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 1 JPA repository interface.
2025-08-30 15:40:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 15:40:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
2025-08-30 15:40:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 15:40:56 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 15:40:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 15:40:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 15:40:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 15:40:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1693 ms
2025-08-30 15:40:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:40:57 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 15:40:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:40:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:40:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 15:40:57 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2a21cbe7
2025-08-30 15:40:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 15:40:57 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:40:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:40:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:40:58 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 15:40:58 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 15:40:58 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 15:40:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 15:40:58 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@4981b83
2025-08-30 15:40:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 15:40:58 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 15:40:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 15:40:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 15:41:00 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 15:41:00 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 15:41:00 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 15:41:00 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 15:41:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 15:41:01 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 15:41:01 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:41:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:41:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:41:01 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756557661187
2025-08-30 15:41:01 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 15:41:01 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 7.007 seconds (process running for 8.21)
2025-08-30 15:41:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:41:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 15:41:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:41:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-5454f59d-e135-46f1-9ee0-5d9475ece63e
2025-08-30 15:41:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 15:41:01 [RMI TCP Connection(2)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 15:41:01 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 15:41:01 [RMI TCP Connection(2)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-30 15:41:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-5454f59d-e135-46f1-9ee0-5d9475ece63e', protocol='range'}
2025-08-30 15:41:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 7: {consumer-sensor_data_interpreter_group-1-5454f59d-e135-46f1-9ee0-5d9475ece63e=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 15:41:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-sensor_data_interpreter_group-1-5454f59d-e135-46f1-9ee0-5d9475ece63e', protocol='range'}
2025-08-30 15:41:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 15:41:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 15:41:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=50, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 15:41:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 15:41:33 [http-nio-8080-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 15:41:33 [http-nio-8080-exec-2] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 15:41:33 [http-nio-8080-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 15:41:33 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 15:41:33 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 15:41:33 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756557693934
2025-08-30 15:41:34 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 15:41:34 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 3 with epoch 0
2025-08-30 15:41:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 15:41:35 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 15:41:35 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 15:41:35 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-5454f59d-e135-46f1-9ee0-5d9475ece63e sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 16:26:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 16:26:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 16:26:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 16:26:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 16:26:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 16:26:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 16:26:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 16:26:48 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 16:26:48 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-08-30 16:26:54 [main] INFO  c.t.s.SensorDataInterpreterApplication - Starting SensorDataInterpreterApplication using Java 21.0.8 with PID 17016 (D:\personal\interview\turkishTech\sensor-data-interpreter\target\classes started by omer.yusufoglu in D:\personal\interview\turkishTech\sensor-data-interpreter)
2025-08-30 16:26:54 [main] INFO  c.t.s.SensorDataInterpreterApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-30 16:26:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 16:26:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 1 JPA repository interface.
2025-08-30 16:26:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-30 16:26:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 2 JPA repository interfaces.
2025-08-30 16:26:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-30 16:26:56 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-08-30 16:26:56 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-30 16:26:56 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-08-30 16:26:56 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-30 16:26:56 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1918 ms
2025-08-30 16:26:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 16:26:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.26.Final
2025-08-30 16:26:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 16:26:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 16:26:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-30 16:26:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@85c3522
2025-08-30 16:26:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-30 16:26:57 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 16:26:57 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 16:26:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 16:26:57 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-30 16:26:57 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-30 16:26:57 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-30 16:26:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-08-30 16:26:57 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@1a4c6e74
2025-08-30 16:26:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-08-30 16:26:57 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-30 16:26:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-30 16:26:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 16:26:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-30 16:26:58 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-08-30 16:26:59 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 6 endpoints beneath base path '/actuator'
2025-08-30 16:26:59 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-08-30 16:26:59 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-30 16:26:59 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-sensor_data_interpreter_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = sensor_data_interpreter_group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 10
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2025-08-30 16:26:59 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 16:26:59 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 16:26:59 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 16:26:59 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756560419597
2025-08-30 16:26:59 [main] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Subscribed to topic(s): turkish-cargo-sensors
2025-08-30 16:26:59 [main] INFO  c.t.s.SensorDataInterpreterApplication - Started SensorDataInterpreterApplication in 6.462 seconds (process running for 7.963)
2025-08-30 16:27:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 16:27:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2025-08-30 16:27:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 16:27:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: need to re-join with the given member-id: consumer-sensor_data_interpreter_group-1-1abe58d5-26df-496f-943f-85d9865a8a63
2025-08-30 16:27:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] (Re-)joining group
2025-08-30 16:27:00 [RMI TCP Connection(4)-192.168.1.7] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-30 16:27:00 [RMI TCP Connection(4)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-30 16:27:00 [RMI TCP Connection(4)-192.168.1.7] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-30 16:27:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully joined group with generation Generation{generationId=9, memberId='consumer-sensor_data_interpreter_group-1-1abe58d5-26df-496f-943f-85d9865a8a63', protocol='range'}
2025-08-30 16:27:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Finished assignment for group at generation 9: {consumer-sensor_data_interpreter_group-1-1abe58d5-26df-496f-943f-85d9865a8a63=Assignment(partitions=[turkish-cargo-sensors-0])}
2025-08-30 16:27:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Successfully synced group in generation Generation{generationId=9, memberId='consumer-sensor_data_interpreter_group-1-1abe58d5-26df-496f-943f-85d9865a8a63', protocol='range'}
2025-08-30 16:27:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Notifying assignor about the new Assignment(partitions=[turkish-cargo-sensors-0])
2025-08-30 16:27:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Adding newly assigned partitions: turkish-cargo-sensors-0
2025-08-30 16:27:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition turkish-cargo-sensors-0 to the committed offset FetchPosition{offset=60, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2025-08-30 16:27:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions assigned: [turkish-cargo-sensors-0]
2025-08-30 16:28:03 [http-nio-8080-exec-2] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = producer-1
	compression.gzip.level = -1
	compression.lz4.level = 9
	compression.type = none
	compression.zstd.level = 3
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.header.urlencode = false
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2025-08-30 16:28:03 [http-nio-8080-exec-2] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2025-08-30 16:28:03 [http-nio-8080-exec-2] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Instantiated an idempotent producer.
2025-08-30 16:28:03 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.9.1
2025-08-30 16:28:03 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: f745dfdcee2b9851
2025-08-30 16:28:03 [http-nio-8080-exec-2] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1756560483953
2025-08-30 16:28:03 [kafka-producer-network-thread | producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=producer-1] Cluster ID: kSUh8zX0S1avARSML_Z9Mg
2025-08-30 16:28:03 [kafka-producer-network-thread | producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=producer-1] ProducerId set to 4 with epoch 0
2025-08-30 16:28:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  c.t.s.consumer.SensorDataConsumer - Received batch of 10 messages from Kafka
2025-08-30 16:28:04 [pool-2-thread-3] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-10] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-1] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-7] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-2] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-5] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-4] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-9] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-6] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-8] WARN  c.t.s.service.CalibrationServiceImpl - No calibration factor found for aircraft TK987. Using default factor 1.0.
2025-08-30 16:28:04 [pool-2-thread-7] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-2] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-10] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-8] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-1] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-5] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-9] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-6] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-3] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:28:04 [pool-2-thread-4] INFO  c.t.s.s.SensorDataProcessingService - Processed message id=TK02 -> 1 reading, 1 events
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Revoke previously assigned partitions turkish-cargo-sensors-0
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: partitions revoked: [turkish-cargo-sensors-0]
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Member consumer-sensor_data_interpreter_group-1-1abe58d5-26df-496f-943f-85d9865a8a63 sending LeaveGroup request to coordinator localhost:9092 (id: 2147483646 rack: null) due to the consumer unsubscribed from all topics
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ClassicKafkaConsumer - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Unsubscribed all topics or patterns and assigned partitions
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Resetting generation and member id due to: consumer pro-actively leaving the group
2025-08-30 16:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-sensor_data_interpreter_group-1, groupId=sensor_data_interpreter_group] Request joining group due to: consumer pro-actively leaving the group
2025-08-30 16:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 16:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 16:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 16:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 16:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-sensor_data_interpreter_group-1 unregistered
2025-08-30 16:34:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - sensor_data_interpreter_group: Consumer stopped
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-30 16:34:35 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for producer-1 unregistered
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-08-30 16:34:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
